package main

import "testing"

func Test_maxProductPath(t *testing.T) {
	tests := []struct {
		name string
		grid [][]int
		want int
	}{
		{
			grid: [][]int{
				{-1, 4, 1, 0, -4, 4, -2, 4, -4, -4, 0, 4, 0, 0, -3},
				{-4, -2, 1, 1, 4, -1, 1, -1, -3, -3, 1, -3, 1, -1, 0},
				{4, 4, 2, 2, -1, -3, 0, -1, 0, 1, 0, -1, 4, 4, -4},
				{-3, 4, 4, 0, -3, -2, -1, 4, 2, 0, 3, 3, -3, 0, 0},
				{2, -2, 4, 0, 4, -1, -3, -1, 3, 4, -1, 0, 3, 2, 4},
				{-4, -1, 1, 0, 2, 4, 1, 0, -3, -2, 0, 0, -4, -4, -2},
				{4, -1, 0, -4, 1, 0, 3, 4, -3, 1, -4, 2, 0, -1, 4},
				{1, -3, 0, 2, 0, -2, 4, 1, -3, -4, 4, 1, -2, -3, 4},
				{0, 1, 4, -3, -4, 1, 3, 2, 0, -2, -3, 2, 0, 0, 1},
				{-3, 3, 0, 4, 3, 4, 0, 2, -3, 0, -2, 2, -4, 0, 2},
				{-4, -1, -4, -2, 2, 3, -2, 4, 4, 3, 0, -2, 2, 0, -1},
				{0, 3, -2, -4, -3, 1, -1, 3, 1, -1, -2, 0, -3, 1, 1},
				{-4, 3, 3, -1, -1, -2, 1, -2, 4, -3, -1, 3, 3, -3, 1},
				{-1, -4, 2, -2, -2, -3, 0, 1, 1, 3, 1, 4, 0, 3, -4},
				{-1, 0, -2, -4, 1, -1, -2, -4, -1, -3, 1, 2, 1, 4, -2},
			},
			want: 33461948,
		},

		{
			grid: [][]int{
				{2, 1, 3, 0, -3, 3, -4, 4, 0, -4},
				{-4, -3, 2, 2, 3, -3, 1, -1, 1, -2},
				{-2, 0, -4, 2, 4, -3, -4, -1, 3, 4},
				{-1, 0, 1, 0, -3, 3, -2, -3, 1, 0},
				{0, -1, -2, 0, -3, -4, 0, 3, -2, -2},
				{-4, -2, 0, -1, 0, -3, 0, 4, 0, -3},
				{-3, -4, 2, 1, 0, -4, 2, -4, -1, -3},
				{3, -2, 0, -4, 1, 0, 1, -3, -1, -1},
				{3, -4, 0, 2, 0, -2, 2, -4, -2, 4},
				{0, 4, 0, -3, -4, 3, 3, -1, -2, -2},
			},
			want: 19215865,
		},

		{
			grid: [][]int{
				{1, -2, 1},
				{1, -2, 1},
				{3, -4, 1},
			},
			want: 8,
		},

		{
			grid: [][]int{
				{-1, -2, -3},
				{-2, -3, -3},
				{-3, -3, -2},
			},
			want: -1,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := maxProductPath(tt.grid); got != tt.want {
				t.Errorf("maxProductPath() = %v, want %v", got, tt.want)
			}
		})
	}
}
